npm install xxx 安装模块
npm install xxx@1.1.1   安装1.1.1版本的xxx
npm install xxx -g 将模块安装到全局环境中。
npm ls 查看安装的模块及依赖
npm ls -g 查看全局安装的模块及依赖
npm uninstall xxx  (-g) 卸载模块
npm cache clean 清理缓存
npm help xxx  查看帮助
npm view moudlename dependencies  查看包的依赖关系
npm view modulenames  查看node模块的package.json文件夹
npm view modulename labelname  查看package.json文件夹下某个标签的内容
npm view modulename repository.url  查看包的源文件地址
npm view modulename engines   查看包所依赖的node的版本
npm help folders   查看npm使用的所有文件夹
npm rebuild modulename    用于更改包内容后进行重建
npm outdated   检查包是否已经过时，此命令会列出所有已经过时的包，可以及时进行包的更新
npm update modulename   更新node模块

//******设置代理
npm config set proxy http://dev-proxy.oa.com:8080

//***********代理参考网站
http://snoopyxdy.blog.163.com/blog/static/60117440201422695653698/
//
2016之总结：

   目前波分工具域三人都是11月底入职的年轻小伙，视野开阔，技术尚可，积极性强，可塑性强。但入职均在年底，因此，实际参与整个资料波分团队工具开发的时间并不算长，
 但凭自己的主动性和积极性各自都很快融入了团队，适应了这边的开发环境与人员分布。在不到两个半月的时间内，完成了诸如传送书架portal、1800配置工具、902
 配置工具、hedex光盘首页等主要项目的开发，取得客户较好的需求反馈。

2017之计划：

1.开发人员的技术增强补全
   整个工具团队结构为：后台java两人（其中一人偏向jsp，一人偏向纯后台）、前端开发一人。我们从华为固网资料主管了解到，这边工具开发目前主要集中在前端开发部分
，开发任务也更偏向于前台页面及页面逻辑的实现，因此，后台开发的两名同事也或多或少要参与前端开发。从技术上角度来看，接触新的领域，需要一定时间的学习和实践
经验的积累，这其中必定会耗费一定时间和精力，因此，我初步计划，日常工作中我们会抽出一定的时间正式或非正式地组织前端知识和技术的培训和交流，让每个同事尽快
掌握实用的前端开发技能，满足2017年工具域的开发需求，以达到任务更合理高效分配的结果。

2.团队技术与效率的提升
  目前整个工具开发的任务主要是对原有的工具进行版本更新或局部补充，因此，我们会鼓励开发人员积极学习以前开发的资料，消化以前开发的技术，并在今后开发中主动借鉴
并引用有价值的现有技术，这将在一定程度上减少不必要的重复开发并能对现有技术实现良性继承。此外，我们也将积极主动学习新技术、新知识，收集我们在开发中遇到的
各种难点问题，归纳各项技术在实际开发中的优缺点，通过周报、月报等形式的团队积极交流，最后总结出团队的开发指导书。

3.加强与其他域的配合协作
  我们将重点加强与VE、实际需求提出人、测试的交流沟通。与需求提出人详细沟通，明确自己所开发项目的大致方向和完整需求功能，尽可能反馈风险与可行性；与VE域对接，明确工具开发的具体细节实现，
积极处理测试返回的问题清单，及时解决遗留问题。
  
  
 
